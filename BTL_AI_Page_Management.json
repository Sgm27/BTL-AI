{
  "name": "BTL AI Page Management",
  "nodes": [
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              },
              {
                "name": "file_title",
                "value": "={{ $('Set File ID').first().json.file_title }}"
              }
            ]
          }
        }
      },
      "id": "fac92469-5d03-4854-96ba-e69ab33cc6a1",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2340,
        1160
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "e1491f95-a5e9-48fe-a46b-af8177bd2efd",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2220,
        1140
      ],
      "credentials": {
        "openAiApi": {
          "id": "uJe0O52dyYL3TVOM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "af2c3660-2937-4425-98da-4038c414e99f",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1120,
        1200
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "JT7gomVy5RDzsGXU",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1b5yhwsmaFmf39uSJiRnECuyk4ILuE0g6",
          "mode": "list",
          "cachedResultName": "BTL AI Page Management Documents",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1b5yhwsmaFmf39uSJiRnECuyk4ILuE0g6"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "855522d3-3f00-40ec-ab1e-28dc15b75b7f",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -200,
        1260
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "JT7gomVy5RDzsGXU",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1b5yhwsmaFmf39uSJiRnECuyk4ILuE0g6",
          "mode": "list",
          "cachedResultName": "BTL AI Page Management Documents",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1b5yhwsmaFmf39uSJiRnECuyk4ILuE0g6"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "c9f2e5ff-b523-464c-a245-5134cd486209",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -200,
        1460
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "JT7gomVy5RDzsGXU",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "fbe5d17b-6ad7-4592-8bf1-d8c1a024c103",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2000,
        1720
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "tmp"
      },
      "id": "66be7922-2810-402d-9ed6-bb516d669b14",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1,
      "position": [
        140,
        180
      ],
      "notesInFlow": false,
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "32a5bea5-b53c-4079-97c0-cd663cae9c63",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        460,
        1200
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "We04zPRxK1KPCW0y",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "77d782de-169d-4a46-8a8e-a3831c04d90f",
              "name": "file_title",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "9bde4d7f-e4f3-4ebd-9338-dce1350f9eab",
              "name": "file_url",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "569f94c5-7250-4156-bb2d-359416e555d8",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "544ca9f8-b8d5-4637-a45d-9f8e0aa707d3",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2000,
        940
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "786e384a-ace5-4f8e-96a3-1ed0d8b99be4",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1780,
        1220
      ]
    },
    {
      "parameters": {},
      "id": "2ad48cc9-a2a8-453c-8f55-3636033c287a",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2440,
        1340
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "2c4cd123-5f78-4a2c-b7b0-bad7b892bbb6",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2000,
        1220
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "Bạn là trợ lý ảo thông minh của cửa hàng tạp hóa, nhiệm vụ của bạn là hỗ trợ khách hàng tìm kiếm thông tin sản phẩm một cách chính xác và hiệu quả từ kho dữ liệu nội bộ. Kho dữ liệu này chứa cả tài liệu văn bản (Txt, Docs, PDF) và dữ liệu bảng (CSV, Excel).\\n\\nQuy trình làm việc đề xuất:\\n1.  **Luôn bắt đầu bằng Tìm kiếm Ngữ nghĩa (RAG):** Sử dụng công cụ tìm kiếm RAG để truy vấn cơ sở kiến thức đã được vector hóa (bảng \\`documents\\`). Đây là phương pháp hiệu quả nhất cho hầu hết các câu hỏi thông tin chung.\\n2.  **Nếu RAG không đủ:**\\n    *   **Đối với câu hỏi yêu cầu tính toán/tổng hợp trên dữ liệu bảng (Excel/CSV):** Sử dụng công cụ truy vấn SQL (bảng \\`document_rows\\`). Bạn cần biết \\`file_id\\` (tức \\`dataset_id\\`) và cấu trúc (\\`schema\\`) của tệp. Nếu chưa biết, hãy dùng công cụ \\\"List Documents\\\" để lấy thông tin này trước.\\n    *   **Đối với câu hỏi cần thông tin chi tiết hơn từ tài liệu văn bản:** Sử dụng công cụ \\\"List Documents\\\" để xem danh sách các tài liệu có sẵn và metadata của chúng (bao gồm \\`file_id\\`, \\`title\\`, \\`url\\`). Chọn \\`file_id\\` phù hợp và dùng công cụ \\\"Get File Contents\\\" để lấy nội dung đã được lập chỉ mục của tài liệu đó từ bảng \\`documents\\`.\\n3.  **Tổng hợp và Trả lời:** Dựa trên kết quả từ các công cụ, hãy tổng hợp câu trả lời cuối cùng.\\n\\nYêu cầu khi trả lời:\\n*   Luôn lịch sự, tôn trọng và sử dụng ngôn ngữ thân thiện.\\n*   Cung cấp thông tin chính xác dựa trên dữ liệu tìm được, không tự bịa đặt.\\n*   Nếu không tìm thấy câu trả lời, hãy thông báo rõ ràng và đề xuất các bước tiếp theo (ví dụ: kiểm tra lại tài liệu khác, hỏi lại câu hỏi cụ thể hơn).\\n*   Giữ câu trả lời trong giới hạn 2000 ký tự."
        }
      },
      "id": "aca5251c-67a1-4cd4-aed1-41fabf7cd7ce",
      "name": "RAG AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        240,
        -40
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "=application/vnd.google-apps.spreadsheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "b69f5605-0179-4b02-9a32-e34bb085f82d",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 3
        }
      },
      "id": "b2167c97-0da8-414e-99ba-ecb9e4bc537c",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1340,
        1180
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "fb84821b-d135-4c45-895e-bb9800ff5ddd",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2240,
        920
      ],
      "credentials": {
        "supabaseApi": {
          "id": "We04zPRxK1KPCW0y",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "bf0facf4-c040-4e91-b141-8689cd438847",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1560,
        1140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f422e2e0-381c-46ea-8f38-3f58c501d8b9",
              "name": "schema",
              "value": "={{ $('Extract from Excel').isExecuted ? $('Extract from Excel').first().json.keys().toJsonString() : $('Extract from CSV').first().json.keys().toJsonString() }}",
              "type": "string"
            },
            {
              "id": "bb07c71e-5b60-4795-864c-cc3845b6bc46",
              "name": "data",
              "value": "={{ $json.concatenated_data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2360,
        1620
      ],
      "id": "37c2c0c3-2e86-49f8-bdec-bc5ecf7d01dc",
      "name": "Set Schema"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1560,
        1520
      ],
      "id": "900196ed-60f3-48a6-b537-9273c84d526b",
      "name": "Extract from CSV"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE document_metadata (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    url TEXT,\n    created_at TIMESTAMP DEFAULT NOW(),\n    schema TEXT\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        240,
        660
      ],
      "id": "5eabe48c-23f9-4b49-958d-4fb61d3c0e75",
      "name": "Create Document Metadata Table",
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE document_rows (\n    id SERIAL PRIMARY KEY,\n    dataset_id TEXT REFERENCES document_metadata(id),\n    row_data JSONB  -- Store the actual row data\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        460,
        660
      ],
      "id": "405fcd33-f6a0-41f7-9007-95d41fdb50ce",
      "name": "Create Document Rows Table (for Tabular Data)",
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Sử dụng công cụ này để lấy danh sách metadata của tất cả các tài liệu có sẵn từ bảng `document_metadata`, bao gồm `file_id`, `title`, `url`, và `schema` (cấu trúc cột nếu là file Excel/CSV). Hữu ích khi RAG không cung cấp đủ thông tin hoặc khi cần tìm `file_id`/`schema` cho các công cụ khác.",
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_metadata",
          "mode": "list",
          "cachedResultName": "document_metadata"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        260,
        180
      ],
      "id": "cb46e55f-ec21-4b6f-af9b-45bef136b082",
      "name": "List Documents",
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Sử dụng công cụ này để truy xuất nội dung *văn bản đã được lập chỉ mục và chunk hóa* của một tài liệu cụ thể từ bảng `documents` dựa vào `file_id` được cung cấp. Chỉ sử dụng khi RAG không đủ chi tiết và bạn cần xem lại toàn bộ nội dung đã xử lý của một tài liệu văn bản.",
        "operation": "executeQuery",
        "query": "SELECT \n    string_agg(content, ' ') as document_text\nFROM documents\n  WHERE metadata->>'file_id' = $1\nGROUP BY metadata->>'file_id';",
        "options": {
          "queryReplacement": "={{ $fromAI('file_id') }}"
        }
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        380,
        180
      ],
      "id": "62f0e70d-d6cb-4969-978f-949542b16985",
      "name": "Get File Contents",
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Thực thi truy vấn SQL trên dữ liệu bảng (từ file Excel/CSV) đã được lưu trữ trong bảng `document_rows`. Sử dụng công cụ này cho các yêu cầu tính toán, tổng hợp, hoặc lọc phức tạp trên dữ liệu bảng mà RAG không xử lý tốt. **Yêu cầu:** Phải cung cấp `file_id` (dưới dạng `dataset_id` trong mệnh đề WHERE) và biết cấu trúc (`schema`) của bảng (lấy từ công cụ 'List Documents' nếu cần). Luôn truy vấn cột `row_data` (kiểu JSONB) để truy cập dữ liệu từng hàng. Ví dụ: `SELECT AVG((row_data->>'revenue')::numeric) FROM document_rows WHERE dataset_id = 'your_file_id';` hoặc `SELECT row_data->>'category', SUM((row_data->>'sales')::numeric) FROM document_rows WHERE dataset_id = 'your_file_id' GROUP BY row_data->>'category';`\n\nĐịnh dạng thông tin ngày tháng mặc định là dd/mm/yyyy hoặc mm/yyyy",
        "operation": "executeQuery",
        "query": "{{ $fromAI('sql_query') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        500,
        180
      ],
      "id": "7fc2fae1-0791-430f-b989-cd01eb18ad9d",
      "name": "Query Document Rows",
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents",
        "toolDescription": "Công cụ chính để thực hiện tìm kiếm ngữ nghĩa (RAG) trên cơ sở kiến thức đã được vector hóa (bảng `documents`). Sử dụng công cụ này làm bước đầu tiên để trả lời hầu hết các câu hỏi của người dùng về thông tin sản phẩm hoặc nội dung tài liệu.",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 8,
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        620,
        200
      ],
      "id": "6a70b73e-0b64-4d9a-90ba-e1f063de5427",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "We04zPRxK1KPCW0y",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        720,
        380
      ],
      "id": "f3618349-52e8-4e30-9ab6-d0c666c1885e",
      "name": "Embeddings OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "uJe0O52dyYL3TVOM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        20,
        1360
      ],
      "id": "3132a12e-acd2-4d40-bb6b-9e21d8ba6917",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "document_rows",
        "filters": {
          "conditions": [
            {
              "keyName": "dataset_id",
              "condition": "eq",
              "keyValue": "={{ $('Set File ID').item.json.file_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        680,
        1200
      ],
      "id": "699ca4ab-54ed-4d6e-a68b-9ad27e501dab",
      "name": "Delete Old Data Rows",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "We04zPRxK1KPCW0y",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_metadata",
          "mode": "list",
          "cachedResultName": "document_metadata"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID').item.json.file_id }}",
            "title": "={{ $('Set File ID').item.json.file_title }}",
            "url": "={{ $('Set File ID').item.json.file_url }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "schema",
              "displayName": "schema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        900,
        1200
      ],
      "id": "ca0f4239-9dcb-4a11-919c-6a877ad7754d",
      "name": "Insert Document Metadata",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_rows",
          "mode": "list",
          "cachedResultName": "document_rows"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "dataset_id": "={{ $('Set File ID').item.json.file_id }}",
            "row_data": "={{ $json.toJsonString().replaceAll(/'/g, \"''\") }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "dataset_id",
              "displayName": "dataset_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_data",
              "displayName": "row_data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1780,
        1420
      ],
      "id": "32500a0c-565d-40ac-bfbb-2bb95806d929",
      "name": "Insert Table Rows",
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "document_metadata",
          "mode": "list",
          "cachedResultName": "document_metadata"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID').item.json.file_id }}",
            "schema": "={{ $json.schema }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "schema",
              "displayName": "schema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2720,
        1620
      ],
      "id": "e6ed184d-f301-4d8b-82fd-5a2fce7854d6",
      "name": "Update Schema for Document Metadata",
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Enable the pgvector extension to work with embedding vectors\ncreate extension vector;\n\n-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);\n\n-- Create a function to search for documents\ncreate function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        20,
        660
      ],
      "id": "83116d87-7022-488a-9c08-48d904e0b025",
      "name": "Create Documents Table and Match Function",
      "credentials": {
        "postgres": {
          "id": "iOLwUeFRp5DMP0qL",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -200,
        660
      ],
      "id": "014a8fee-c01b-4919-b1b8-0e812fe0d7bb",
      "name": "When clicking 'Test workflow'"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -200,
        -40
      ],
      "id": "137ed851-12ca-4fe8-a4c0-cc938bc7cfaa",
      "name": "Telegram Trigger",
      "webhookId": "6a51d8a0-d6a8-4cae-87e4-13013794051e",
      "credentials": {
        "telegramApi": {
          "id": "LmlD6Ch6XaEU3ecQ",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1000,
        -40
      ],
      "id": "c968fd88-0f8f-4d42-8bcb-d35c81a7d48c",
      "name": "Telegram",
      "webhookId": "496c7075-6d7e-4006-acfa-017863582f38",
      "credentials": {
        "telegramApi": {
          "id": "LmlD6Ch6XaEU3ecQ",
          "name": "BTL AI Page Management"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-2025-04-14",
        "options": {}
      },
      "id": "af532f59-863b-404d-b763-83a5fd93483d",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -20,
        240
      ],
      "credentials": {
        "openAiApi": {
          "id": "uJe0O52dyYL3TVOM",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "description": "Sử dụng tool này nếu cần suy nghĩ để giải quyết các vấn đề phức tạp hoặc các câu lệnh sql, hoặc nếu không chạy được sql thì hãy dùng tool nay để suy nghĩ và chạy lại"
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        980,
        200
      ],
      "id": "f86b337c-7d84-47d7-b37c-04179de32d55",
      "name": "Think"
    }
  ],
  "pinData": {},
  "connections": {
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Delete Old Data Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Set Schema",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RAG AI Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from CSV",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert Table Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Schema": {
      "main": [
        [
          {
            "node": "Update Schema for Document Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from CSV": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert Table Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Document Metadata Table": {
      "main": [
        [
          {
            "node": "Create Document Rows Table (for Tabular Data)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Documents": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get File Contents": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Query Document Rows": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Data Rows": {
      "main": [
        [
          {
            "node": "Insert Document Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Document Metadata": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Documents Table and Match Function": {
      "main": [
        [
          {
            "node": "Create Document Metadata Table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "Create Documents Table and Match Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f659e527-0a0e-415d-8f6b-d21ec6427ccc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9af398ac7c627c2bd355c90c29118876e61fec21e0425eeb3bdd7b7fefbad1f3"
  },
  "id": "H0Om1jPYNRTiLNXI",
  "tags": []
}